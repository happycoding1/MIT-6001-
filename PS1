Problem 1
10.0 points possible (graded)
Assume s is a string of lower case characters.
Write a program that counts up the number of vowels contained in the string s. Valid vowels are: 'a', 'e', 'i', 'o', and 'u'. For example, if s = 'azcbobobegghakl', your program should print:
Number of vowels: 5



numVowels = 0
for char in s:
    if char in 'aeiouAEIOU':
        numVowels +=1
    else:
        numVowels +=0
print('numVowels is: ' + str(numVowels))



Problem 2
10.0 points possible (graded)
Assume s is a string of lower case characters.
Write a program that prints the number of times the string 'bob' occurs in s. For example, if s = 'azcbobobegghakl', then your program should print
Number of times bob occurs is: 2



s = 'azcbobobegghakl'
countBob = 0
int = 0
for i in range(len(s)):
    if s[i:].startswith('bob'):
        countBob += 1
print('Number of times bob occurs is:' + str(countBob))




Problem 3
15.0 points possible (graded)
Assume s is a string of lower case characters.
Write a program that prints the longest substring of s in which the letters occur in alphabetical order. For example, if s = 'azcbobobegghakl', then your program should print
Longest substring in alphabetical order is: beggh
In the case of ties, print the first substring. For example, if s = 'abcbcd', then your program should print
Longest substring in alphabetical order is: abc



s = 'azcbobobegghakl'
curString = s[0]
longest = s[0]
for i in range(1, len(s)):
    
    if s[i] >= curString[-1]:
        curString += s[i]
            if len(curString) > len(longest):
                longest = curString
        else:
            curString = s[i]
print ('Longest substring in alphabetical order is:', longest)
